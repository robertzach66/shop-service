inventory:
  url: http://localhost:8082

server:
  port: 8081

spring:
  application:
    name: order-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/shopdb
    username: robert
    password: postgreSQL66
  jpa:
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  kafka:
    bootstrap-servers: localhost:29092
    template:
      default-topic: order-placed
    producer:
      acks: -1
      bootstrap-servers: localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema:
          registry:
            url: http://127.0.0.1:8089
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs

# Actuator endpoints
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    circuitbreakers:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            request: true
  observations:
    key-values:
      application: order-service
  tracing:
    sampling:
      probability: 1.0

# Resilience4j Properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        minimum-number-of-calls: 5
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 2s
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s

loki:
  url: http://localhost:3100/loki/api/v1/push